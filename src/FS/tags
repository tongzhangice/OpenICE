A	exact-solutions.c	21
ADD_TETRA_FUNC	layers.c	57
BRICK	layers.c	52
CONSTRAINED	temp-solver.c	58
D	exact-solutions.c	19
DDim	temp-solver.c	55
DGETRF_FOR	ins-pcd.c	276
DGETRI_FOR	ins-pcd.c	277
DH	struct-mesh.c	/^#define DH(i, j) get_data2(dh_dat, 1, i, j)$/
DH2	struct-mesh.c	/^#define DH2(i, j) get_data2(dh2_dat, 1, i, j)$/
DOF_USER_FUNC	fv_vert.c	35
DS	struct-mesh.c	/^#define DS(i, j) get_data(ds_dat, 1, i, j)$/
DS2	struct-mesh.c	/^#define DS2(i, j) get_data(ds2_dat, 1, i, j)$/
DofVertData	save-load.c	/^#define DofVertData(dof, i) DofVertexData(dof, i)$/
EDGE_INFO	layers.c	55
ELEM_INFO	layers.c	68
ELEM_TYPE	layers.c	53
EPS_T	ESIMINT-TEST.c	132
EPS_T	temp-solver.c	508
ERR	netcdf-utils.c	/^#define ERR(e) {printf("Error: %s\\n", nc_strerror(/
FACE_INFO	layers.c	56
FORMAT	ice-grid.c	338
FUNC2TET	layers.c	58
FUNC_T_WRAPPER	ins-bc.c	/^# define FUNC_T_WRAPPER(func_xyz)					\\$/
FUNC_T_WRAPPER	ins-bc.c	/^FUNC_T_WRAPPER(func_u)$/
FUNC_T_WRAPPER	ins-bc.c	42
FV_ELEM	fv_vert.c	58
FV_ELEM_	fv_vert.c	48
GET_TOKEN	layers.c	81
GRID_2D	fv_vert.c	70
GRID_2D_	fv_vert.c	61
GRID_SCALING	GREENLAND.c	16
Gambit_Elemtype	layers.c	109
Gambit_Facemap	layers.c	127
Gambit_Vertmap	layers.c	118
GetElementEdgeGMap	save-load.c	/^GetElementEdgeGMap(SIMPLEX *e, int *M)$/
GetElementFaceGMap	save-load.c	/^#define GetElementFaceGMap(e, M)			\\$/
GetElementVertGMap	save-load.c	/^#define GetElementVertGMap(e, M)			\\$/
GlobalVert	save-load.c	/^#define GlobalVert(g,no) GlobalVertex(g, no)$/
Gradu	ice-grid.c	181
Gu_map	ice-grid.c	180
ID_TYPE	layers.c	1431
ID_TYPE	layers.c	1433
L	exact-solutions.c	12
MATCH_EDGE	ice-grid.c	/^#  define MATCH_EDGE(v0, v1, vL0, vL1)		\\$/
MAT_CHECK_DUP	ins-system.c	/^#define MAT_CHECK_DUP(mat)    {					\\$/
MAX_QUAD_ORDER	ins-utils.c	114
Mins-main	ins-main.c	/^main(int argc, char *argv[])$/
NC_DATA	netcdf-utils.c	36
NC_DATA_	netcdf-utils.c	15
NEXT_LINE	layers.c	92
NElem	save-load.c	35
NX	netcdf-utils.c	11
NX	read_txt_data.c	5
NY	netcdf-utils.c	12
NZ	netcdf-utils.c	13
NsSolver_Options	ins-utils.c	/^NsSolver_Options() $/
Nx	struct-mesh.c	16
PACK_DAT	ice-grid.c	/^#define PACK_DAT(dat, p, x, y, z, vu, tau, dp, vT,/
PI	exact-solutions.c	8
PRES_SCALING	exact-solutions.c	34
PRISM	layers.c	51
PYRAMID	layers.c	50
QUADRILATERAL	layers.c	47
READ_DATA	save-load.c	/^#define READ_DATA(dof, GType, gtype)				\\$/
READ_DATA	save-load.c	218
READ_DATA	save-load.c	/^#define READ_DATA(dof, GType, gtype)				\\$/
READ_DATA	save-load.c	318
READ_DATA_1D	netcdf-utils.c	/^#define READ_DATA_1D(var) {					\\$/
READ_DATA_2D	netcdf-utils.c	/^#define READ_DATA_2D(var) {					\\$/
READ_DATA_3D	netcdf-utils.c	/^#define READ_DATA_3D(var) {					\\$/
READ_NUMBER	layers.c	74
Re	ins-bc.c	14
Re	ins-bc.c	15
S	struct-mesh.c	/^#define S(i, j) get_data(s_dat, 1, i, j)$/
SET_NORM	layers.c	/^#define SET_NORM(X, Y, N)			\\$/
SHOW_M	ins-pcd.c	/^#define SHOW_M(matN, mat_m, mat_n) {				\\$/
SIGN_FRICTION	ins-system.c	10
SIGN_STAB	ins-system.c	11
SUB_SOLVER_VERB	ins-pcd.c	6
SUB_SOLVER_VERB	ins-solver.c	95
Smu	exact-solutions.c	28
Sp	exact-solutions.c	25
St	exact-solutions.c	29
Su	exact-solutions.c	26
Sx	exact-solutions.c	17
Sz	exact-solutions.c	18
TEMP_FREE	temp-solver.c	57
TETRA	layers.c	49
TRIANGLE	layers.c	48
TRUNK_SIZE	save-load.c	71
Time	ins-bc.c	14
Time0	ins-bc.c	17
U	struct-mesh.c	/^#define U(i, j, k) (get_data(u_dat, 3, i, j) + k)$/
U1	struct-mesh.c	/^#define U1(i, j, k) (get_data(u1_dat, 3, i, j) + k/
UNPACK_DAT	ice-grid.c	/^#define UNPACK_DAT(dat, p, x, y, z, vu, tau, dp, v/
UNUSED_LINE	layers.c	88
UNUSED_LINE_CHECK	layers.c	/^#define UNUSED_LINE_CHECK(str) {				\\$/
VTK_VERB	layers.c	/^#define VTK_VERB(VERB) {				\\$/
WRITE_DATA	save-load.c	/^#define WRITE_DATA(dof, GType, gtype)					\\$/
WRITE_DATA	save-load.c	173
WRITE_MAP	save-load.c	/^#define WRITE_MAP(GType, gtype)					\\$/
WRITE_MAP	save-load.c	96
WRITE_MAP	save-load.c	/^#define WRITE_MAP(GType, gtype)					\\$/
WRITE_MAP	save-load.c	134
X	fv_vert.c	65
X	struct-mesh.c	/^#define X(i, j, k) (get_data(x_dat, 3, i, j) + k)$/
XX	ice-grid.c	340
XY	ice-grid.c	341
XZ	ice-grid.c	342
Y	fv_vert.c	66
YX	ice-grid.c	343
YY	ice-grid.c	344
YZ	ice-grid.c	345
Z	exact-solutions.c	22
ZX	ice-grid.c	346
ZY	ice-grid.c	347
ZZ	ice-grid.c	348
_Length_	ins-main.c	15
_alpha_	ins-main.c	16
_nsp	EXACT.c	3
_nsp	ice-grid.c	15
_nsp	ins-pcd.c	3
_nsp	ins-solver.c	92
_nsp	ins-system.c	8
_nsp	ISMIP-HOM.c	3
_nsp	moving-mesh.c	6
_nsp	temp-solver.c	53
_p	EXACT.c	2
_p	ins-solver.c	91
_p	ISMIP-HOM.c	2
_pcd	ins-pcd.c	4
_pcd	ins-solver.c	93
_pcd	ins-system.c	9
_pcd	temp-solver.c	54
a	fv_vert.c	55
active_data	netcdf-utils.c	39
adjust_time	ins-bc.c	/^void adjust_time(FLOAT delta_time)$/
airtemp2m	netcdf-utils.c	32
alpha	exact-solutions.c	23
balvelmag	netcdf-utils.c	22
bdry_mark	fv_vert.c	68
bheatflx	netcdf-utils.c	23
build_layered_mesh	layers.c	/^build_layered_mesh(GRID *g, LAYERED_MESH *gL)$/
build_layered_mesh_height	layers.c	/^build_layered_mesh_height(GRID *g, LAYERED_MESH *g/
cbx	exact-solutions.c	21
cby	exact-solutions.c	21
checkBdry	ins-utils.c	/^checkBdry(GRID *g)$/
check_height	moving-mesh.c	/^check_height(GRID *g, LAYERED_MESH *gL)$/
ct	exact-solutions.c	21
cx	exact-solutions.c	21
cy	exact-solutions.c	21
data	netcdf-utils.c	38
data_bed	LAS.c	2
data_sur	LAS.c	2
data_sur_T	ins-main.c	19
data_sur_grad_x	LAS.c	2
data_sur_grad_y	LAS.c	2
data_thk	LAS.c	2
dbg	fv_vert.c	27
destory_layerd_mesh	layers.c	/^destory_layerd_mesh(LAYERED_MESH **gL_ptr)$/
dhdt	netcdf-utils.c	19
dofNormL2	ins-utils.c	/^dofNormL2(DOF *dof)$/
dof_norm_L2	ins-utils.c	/^dof_norm_L2(DOF *dof)$/
dof_range	ins-utils.c	/^void dof_range(DOF *u)$/
dof_set_normal_data	slip-bdry.c	/^void dof_set_normal_data(DOF *u_h, SURF_BAS *surf_/
dx	netcdf-utils.c	40
dx	struct-mesh.c	22
dy	netcdf-utils.c	40
edge2vert	fv_vert.c	75
edge_info	layers.c	62
elapsed_time	ins-utils.c	/^elapsed_time(GRID *g, BOOLEAN flag, double mflops)/
elem_id	save-load.c	42
eps_height	ins-main.c	17
eu_xx	ins-pcd.c	194
eu_xx	ins-pcd.c	265
eu_xx	ins-system.c	550
eu_xx	ins-system.c	621
eu_xy	ins-pcd.c	195
eu_xy	ins-pcd.c	266
eu_xy	ins-system.c	551
eu_xy	ins-system.c	622
eu_xz	ins-pcd.c	196
eu_xz	ins-pcd.c	267
eu_xz	ins-system.c	552
eu_xz	ins-system.c	623
eu_yx	ins-pcd.c	197
eu_yx	ins-pcd.c	268
eu_yx	ins-system.c	553
eu_yx	ins-system.c	624
eu_yy	ins-pcd.c	198
eu_yy	ins-pcd.c	269
eu_yy	ins-system.c	554
eu_yy	ins-system.c	625
eu_yz	ins-pcd.c	199
eu_yz	ins-pcd.c	270
eu_yz	ins-system.c	555
eu_yz	ins-system.c	626
eu_zx	ins-pcd.c	200
eu_zx	ins-pcd.c	271
eu_zx	ins-system.c	556
eu_zx	ins-system.c	627
eu_zy	ins-pcd.c	201
eu_zy	ins-pcd.c	272
eu_zy	ins-system.c	557
eu_zy	ins-system.c	628
eu_zz	ins-pcd.c	202
eu_zz	ins-pcd.c	273
eu_zz	ins-system.c	558
eu_zz	ins-system.c	629
face_info	layers.c	63
find_melt_region	temp-solver.c	/^find_melt_region(NSSolver *ns)$/
free_element_id	save-load.c	/^free_element_id(GRID *g)$/
func2tet	layers.c	67
func_Q	ins-main.c	/^void func_Q(FLOAT x, FLOAT y, FLOAT z, FLOAT *q) {/
func_T	ESIMINT-TEST.c	/^void func_T(FLOAT x, FLOAT y, FLOAT z, FLOAT *T) {/
func_T	exact-solutions.c	/^void func_T(double x, double y, double z, double */
func_T	GREENLAND.c	/^void func_T(FLOAT x, FLOAT y, FLOAT z, FLOAT *T) {/
func_T	ins-main.c	/^void func_T(FLOAT x, FLOAT y, FLOAT z, FLOAT *T) {/
func_T	ins-testcase.c	/^void func_T(FLOAT x, FLOAT y, FLOAT z, FLOAT *T) {/
func_T	ins-testcase.c	/^void func_T(FLOAT x, FLOAT y, FLOAT z, FLOAT *T) {/
func_T	ISMIP-HOM.c	/^void func_T(FLOAT x, FLOAT y, FLOAT z, FLOAT *T) {/
func_a	exact-solutions.c	/^void func_a(double x, double y, double *a)$/
func_a	GREENLAND.c	/^void func_a(FLOAT x, FLOAT y, FLOAT *value) {$/
func_a	ISMIP-HOM.c	/^void func_a(FLOAT x, FLOAT y, FLOAT *q)$/
func_a	LAS.c	/^void func_a(FLOAT x, FLOAT y, FLOAT *value) {$/
func_analytic	exact-solutions.c	/^func_analytic(double x, double y, double z, int ty/
func_b	exact-solutions.c	/^void func_b(double x, double y, double z, double */
func_b	ISMIP-HOM.c	/^void func_b(FLOAT x, FLOAT y, FLOAT z, FLOAT *q)$/
func_beta	ESIMINT-TEST.c	/^void func_beta(FLOAT x, FLOAT y, FLOAT z, FLOAT *b/
func_beta	EXACT.c	/^void func_beta(FLOAT x, FLOAT y, FLOAT z, FLOAT *b/
func_beta	GREENLAND.c	/^void func_beta(FLOAT x, FLOAT y, FLOAT z, FLOAT *b/
func_beta	ISMIP-HOM.c	/^void func_beta(FLOAT x, FLOAT y, FLOAT z, FLOAT *b/
func_beta	LAS.c	/^void func_beta(FLOAT x, FLOAT y, FLOAT z, FLOAT *b/
func_conv	ins-testcase.c	/^void func_conv(FLOAT x, FLOAT y, FLOAT z, FLOAT *c/
func_conv	ins-testcase.c	/^void func_conv(FLOAT x, FLOAT y, FLOAT z, FLOAT *c/
func_eye	slip-bdry.c	/^void func_eye(FLOAT x, FLOAT y, FLOAT z, FLOAT *e)/
func_f	ESIMINT-TEST.c	/^void func_f(FLOAT x, FLOAT y, FLOAT z, FLOAT *f) {/
func_f	exact-solutions.c	/^void func_f(double x, double y, double z, double */
func_f	fv_vert.c	69
func_f	GREENLAND.c	/^void func_f(FLOAT x, FLOAT y, FLOAT z, FLOAT *f) {/
func_f	ins-testcase.c	/^void func_f(FLOAT x, FLOAT y, FLOAT z, FLOAT *f) {/
func_f	ins-testcase.c	/^void func_f(FLOAT x, FLOAT y, FLOAT z, FLOAT *f) {/
func_f	ISMIP-HOM.c	/^void func_f(FLOAT x, FLOAT y, FLOAT z, FLOAT *f) {/
func_f	LAS.c	/^void func_f(FLOAT x, FLOAT y, FLOAT z, FLOAT *f) {/
func_fT	ESIMINT-TEST.c	/^void func_fT(FLOAT x, FLOAT y, FLOAT z, FLOAT *fT)/
func_fT	exact-solutions.c	/^void func_fT(double x, double y, double z, double /
func_fT	GREENLAND.c	/^void func_fT(FLOAT x, FLOAT y, FLOAT z, FLOAT *fT)/
func_fT	ins-testcase.c	/^void func_fT(FLOAT x, FLOAT y, FLOAT z, FLOAT *fT)/
func_fT	ins-testcase.c	/^void func_fT(FLOAT x, FLOAT y, FLOAT z, FLOAT *fT)/
func_fT	ISMIP-HOM.c	/^void func_fT(FLOAT x, FLOAT y, FLOAT z, FLOAT *fT)/
func_fT	LAS.c	/^void func_fT(FLOAT x, FLOAT y, FLOAT z, FLOAT *fT)/
func_g1	ESIMINT-TEST.c	/^void func_g1(FLOAT x, FLOAT y, FLOAT z, FLOAT *g1)/
func_g1	exact-solutions.c	/^void func_g1(double x, double y, double z, double /
func_g1	GREENLAND.c	/^void func_g1(FLOAT x, FLOAT y, FLOAT z, FLOAT *g1)/
func_g1	ins-testcase.c	/^void func_g1(FLOAT x, FLOAT y, FLOAT z, FLOAT *g1)/
func_g1	ins-testcase.c	/^void func_g1(FLOAT x, FLOAT y, FLOAT z, FLOAT *g1)/
func_g1	ISMIP-HOM.c	/^void func_g1(FLOAT x, FLOAT y, FLOAT z, FLOAT *g1)/
func_g1	LAS.c	/^void func_g1(FLOAT x, FLOAT y, FLOAT z, FLOAT *g1)/
func_g2	ESIMINT-TEST.c	/^void func_g2(FLOAT x, FLOAT y, FLOAT z, FLOAT *g2)/
func_g2	exact-solutions.c	/^void func_g2(double x, double y, double z, double /
func_g2	GREENLAND.c	/^void func_g2(FLOAT x, FLOAT y, FLOAT z, FLOAT *g2)/
func_g2	ins-testcase.c	/^void func_g2(FLOAT x, FLOAT y, FLOAT z, FLOAT *g2)/
func_g2	ins-testcase.c	/^void func_g2(FLOAT x, FLOAT y, FLOAT z, FLOAT *g2)/
func_g2	ISMIP-HOM.c	/^void func_g2(FLOAT x, FLOAT y, FLOAT z, FLOAT *g2)/
func_g2	LAS.c	/^void func_g2(FLOAT x, FLOAT y, FLOAT z, FLOAT *g2)/
func_g3	ESIMINT-TEST.c	/^void func_g3(FLOAT x, FLOAT y, FLOAT z, FLOAT *g3)/
func_g3	exact-solutions.c	/^void func_g3(double x, double y, double z, double /
func_g3	GREENLAND.c	/^void func_g3(FLOAT x, FLOAT y, FLOAT z, FLOAT *g3)/
func_g3	ins-testcase.c	/^void func_g3(FLOAT x, FLOAT y, FLOAT z, FLOAT *g3)/
func_g3	ins-testcase.c	/^void func_g3(FLOAT x, FLOAT y, FLOAT z, FLOAT *g3)/
func_g3	ISMIP-HOM.c	/^void func_g3(FLOAT x, FLOAT y, FLOAT z, FLOAT *g3)/
func_g3	LAS.c	/^void func_g3(FLOAT x, FLOAT y, FLOAT z, FLOAT *g3)/
func_gradp	ins-testcase.c	/^void func_gradp(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradp	ins-testcase.c	/^void func_gradp(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradu	ESIMINT-TEST.c	/^void func_gradu(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradu	exact-solutions.c	/^void func_gradu(double x, double y, double z, doub/
func_gradu	GREENLAND.c	/^void func_gradu(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradu	ins-testcase.c	/^void func_gradu(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradu	ins-testcase.c	/^void func_gradu(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradu	ISMIP-HOM.c	/^void func_gradu(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_gradu	LAS.c	/^void func_gradu(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_h	fv_vert.c	/^func_h(double x, double y, double t)$/
func_ice_bed	LAS.c	/^func_ice_bed(FLOAT x, FLOAT y, FLOAT z, FLOAT *ice/
func_ice_shelf_mask	LAS.c	/^func_ice_shelf_mask(FLOAT x, FLOAT y, FLOAT z, FLO/
func_ice_shelf_pres	LAS.c	/^func_ice_shelf_pres(FLOAT x, FLOAT y, FLOAT z, FLO/
func_ice_slab	ESIMINT-TEST.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slab	EXACT.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slab	GREENLAND.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slab	HEINO-TEST.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slab	ISMIP-HOM.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slab	ISMIP-HOM.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slab	LAS.c	/^func_ice_slab(FLOAT x, FLOAT y, FLOAT z, FLOAT *co/
func_ice_slabH	EXACT.c	/^func_ice_slabH(FLOAT x, FLOAT y)$/
func_ice_slabH	GREENLAND.c	/^func_ice_slabH(FLOAT x, FLOAT y)$/
func_ice_slabH	HEINO-TEST.c	/^func_ice_slabH(FLOAT x, FLOAT y)$/
func_ice_sur	LAS.c	/^func_ice_sur(FLOAT x, FLOAT y, FLOAT z, FLOAT *ice/
func_ice_thk	LAS.c	/^func_ice_thk(FLOAT x, FLOAT y, FLOAT z, FLOAT *ice/
func_init_params	exact-solutions.c	/^func_init_params(double Lx0, double alpha0)$/
func_mu	exact-solutions.c	/^void func_mu(double x, double y, double z, double /
func_p	ESIMINT-TEST.c	/^void func_p(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) {/
func_p	exact-solutions.c	/^void func_p(double x, double y, double z, double */
func_p	GREENLAND.c	/^void func_p(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) {/
func_p	ins-testcase.c	/^void func_p(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) {/
func_p	ins-testcase.c	/^void func_p(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) {/
func_p	ISMIP-HOM.c	/^void func_p(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) {/
func_p	LAS.c	/^void func_p(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) {/
func_p0	ins-main.c	/^void func_p0(FLOAT x, FLOAT y, FLOAT z, FLOAT *p) /
func_q	ESIMINT-TEST.c	/^void func_q(FLOAT x, FLOAT y, FLOAT z, FLOAT *q) {/
func_q	exact-solutions.c	/^void func_q(FLOAT x, FLOAT y, FLOAT z, FLOAT *q) $/
func_q	GREENLAND.c	/^void func_q(FLOAT x, FLOAT y, FLOAT z, FLOAT *valu/
func_q	ISMIP-HOM.c	/^void func_q(FLOAT x, FLOAT y, FLOAT z, FLOAT *q) $/
func_q	LAS.c	/^void func_q(FLOAT x, FLOAT y, FLOAT z, FLOAT *valu/
func_s	exact-solutions.c	/^void func_s(double x, double y, double z, double */
func_s	GREENLAND.c	/^void func_s(FLOAT x, FLOAT y, FLOAT z, FLOAT *valu/
func_s	ISMIP-HOM.c	/^void func_s(FLOAT x, FLOAT y, FLOAT z, FLOAT *q)$/
func_s	LAS.c	/^void func_s(FLOAT x, FLOAT y, FLOAT z, FLOAT *valu/
func_sur_grad_x	LAS.c	/^func_sur_grad_x(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_sur_grad_y	LAS.c	/^func_sur_grad_y(FLOAT x, FLOAT y, FLOAT z, FLOAT */
func_u	ESIMINT-TEST.c	/^void func_u(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) {/
func_u	exact-solutions.c	/^void func_u(double x, double y, double z, double */
func_u	GREENLAND.c	/^void func_u(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) {/
func_u	ins-testcase.c	/^void func_u(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) {/
func_u	ins-testcase.c	/^void func_u(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) {/
func_u	ISMIP-HOM.c	/^void func_u(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) {/
func_u	LAS.c	/^void func_u(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) {/
func_u0	ins-main.c	/^void func_u0(FLOAT x, FLOAT y, FLOAT z, FLOAT *u) /
func_vol	exact-solutions.c	/^double func_vol()$/
func_xyz_	ins-bc.c	/^func_xyz_(FLOAT x, FLOAT y, FLOAT z, FLOAT *values/
func_z	moving-mesh.c	/^func_z(FLOAT x, FLOAT y, FLOAT z, FLOAT *v) $/
fv_solver_init	fv_vert.c	/^fv_solver_init(const char *node_file,$/
fv_update	fv_vert.c	/^fv_update(const double *H, $/
g	exact-solutions.c	15
g2D	fv_vert.c	73
getPecletNum	ins-utils.c	/^getPecletNum(GRID *g, DOF *u, FLOAT nu, int order)/
get_dS1	struct-mesh.c	/^get_dS1(NSSolver *ns, int tstep)$/
get_dS2	struct-mesh.c	/^get_dS2(NSSolver *ns, int tstep)$/
get_dS3	struct-mesh.c	/^get_dS3(NSSolver *ns, int tstep)$/
get_data	struct-mesh.c	/^get_data(double *dat, int dim, int i, int j)$/
get_data2	struct-mesh.c	/^get_data2(double *dat, int dim, int i, int j)$/
get_effective_viscosity	ESIMINT-TEST.c	/^get_effective_viscosity(const FLOAT *gu, FLOAT T, /
get_effective_viscosity	EXACT.c	/^get_effective_viscosity(const FLOAT *gu, FLOAT T, /
get_effective_viscosity	GREENLAND.c	/^get_effective_viscosity(const FLOAT *gu, FLOAT T, /
get_effective_viscosity	ISMIP-HOM.c	/^get_effective_viscosity(const FLOAT *gu, FLOAT T, /
get_effective_viscosity	LAS.c	/^get_effective_viscosity(const FLOAT *gu, FLOAT T, /
get_face_area	layers.c	/^get_face_area(FLOAT *p0, FLOAT *p1, FLOAT *p2)$/
get_face_normals	layers.c	/^get_face_normals(FLOAT *p0, FLOAT *p1, FLOAT *p2, /
get_gbas_product	ins-pcd.c	/^get_gbas_product(const FLOAT *gi, const FLOAT *gj,/
get_gbas_product	ins-system.c	/^get_gbas_product(const FLOAT *gi, const FLOAT *gj,/
get_grad_bas	moving-mesh.c	/^get_grad_bas(const FLOAT *J, const FLOAT *G,$/
get_height_depth	moving-mesh.c	/^get_height_depth(NSSolver *ns)$/
get_layer_height	ice-grid.c	/^get_layer_height(FLOAT *H, int nv, const FLOAT *ra/
get_moved_coord	moving-mesh.c	/^get_moved_coord(NSSolver *ns, int tstep)$/
get_moved_coord_FEM	moving-mesh.c	/^get_moved_coord_FEM(NSSolver *ns, int nstep)$/
get_moved_coord_FV_cell	moving-mesh.c	/^get_moved_coord_FV_cell(NSSolver *ns, int nstep)$/
get_moved_coord_FV_point	moving-mesh.c	/^get_moved_coord_FV_point(NSSolver *ns, int tstep)$/
get_solution	fv_vert.c	/^get_solution(double *solu, double time, int on_bdr/
get_surf_dH	moving-mesh.c	/^get_surf_dH(NSSolver *ns)$/
get_surface_bases	slip-bdry.c	/^get_surface_bases(GRID *g, DOF_TYPE *u_type)$/
get_token	layers.c	/^get_token(FILE *fp, char *token)$/
get_tri_area	fv_vert.c	/^get_tri_area(double x0, double x1, double x2, $/
iceInit	ESIMINT-TEST.c	/^iceInit(GRID *g, LAYERED_MESH **gL_ptr)$/
iceInit	EXACT.c	/^iceInit(GRID *g, LAYERED_MESH **gL_ptr)$/
iceInit	GREENLAND.c	/^iceInit(GRID *g, LAYERED_MESH **gL_ptr)$/
iceInit	ISMIP-HOM.c	/^iceInit(GRID *g, LAYERED_MESH **gL)$/
iceInit	LAS.c	/^iceInit(GRID *g, LAYERED_MESH **gL_ptr)$/
iceParter	ice-grid.c	/^iceParter(GRID *g, int nprocs, DOF *weights, FLOAT/
iceSetBoundaryTypes	ESIMINT-TEST.c	/^void iceSetBoundaryTypes(NSSolver *ns)$/
iceSetBoundaryTypes	EXACT.c	/^void iceSetBoundaryTypes(NSSolver *ns)$/
iceSetBoundaryTypes	GREENLAND.c	/^void iceSetBoundaryTypes(NSSolver *ns)$/
iceSetBoundaryTypes	ISMIP-HOM.c	/^void iceSetBoundaryTypes(NSSolver *ns)$/
iceSetBoundaryTypes	LAS.c	/^void iceSetBoundaryTypes(NSSolver *ns)$/
ice_grid	ice-grid.c	/^ice_grid(GRID *g)$/
ice_monitor	ice-grid.c	/^ice_monitor(NSSolver *ns, int nonstep)$/
ice_monitor	ice-grid.c	/^ice_monitor(NSSolver *ns, int tstep) $/
idx_array	layers.c	1436
import_layered_mesh	layers.c	/^import_layered_mesh(char *file_tira,$/
import_layered_mesh	layers.c	/^import_layered_mesh(char *file_tria,$/
init_temp_data	temp-solver.c	/^init_temp_data(NSSolver *ns) $/
init_temp_diff	temp-solver.c	/^init_temp_diff(NSSolver *ns) $/
init_temp_interp	temp-solver.c	/^init_temp_interp(NSSolver *ns) $/
interp_nc_data_3D	netcdf-utils.c	/^interp_nc_data_3D(double x, double y, double z, in/
interp_txt_data	read_txt_data.c	/^void interp_txt_data(double **data, FLOAT x, FLOAT/
lat	netcdf-utils.c	21
len	fv_vert.c	53
list	netcdf-utils.c	35
load_dof_data	save-load.c	/^load_dof_data(GRID *g, DOF *dof, const char *data_/
load_dof_data2	save-load.c	/^load_dof_data2(GRID *g, DOF *dof, const char *data/
load_dof_data3	save-load.c	/^load_dof_data3(GRID *g, DOF *dof, const char *file/
lon	netcdf-utils.c	25
map	struct-mesh.c	23
matGu	ice-grid.c	179
move_dof	moving-mesh.c	/^move_dof(GRID *g, DOF *dz, DOF *u)$/
move_mesh	moving-mesh.c	/^move_mesh(NSSolver *ns)$/
my_bc_map	ESIMINT-TEST.c	/^my_bc_map(int bctype)$/
my_bc_map	EXACT.c	/^my_bc_map(int bctype)$/
my_bc_map	GREENLAND.c	/^my_bc_map(int bctype)$/
my_bc_map	HEINO-TEST.c	/^my_bc_map(int bctype)$/
my_bc_map	ins-testcase.c	/^my_bc_map(int bctype)$/
my_bc_map	ISMIP-HOM.c	/^my_bc_map(int bctype)$/
my_bc_map	LAS.c	/^my_bc_map(int bctype)$/
n	exact-solutions.c	13
n	fv_vert.c	54
name	layers.c	61
nc_data_scaling	netcdf-utils.c	135
nc_data_set_active	netcdf-utils.c	/^nc_data_set_active(int var_index) $/
nc_length_scale	netcdf-utils.c	136
ne	fv_vert.c	63
nedge	layers.c	65
nface	layers.c	66
node_area	fv_vert.c	67
noniter_name	ins-solver.c	98
ns_params	ins-main.c	14
nu	ins-bc.c	14
nu	ins-bc.c	16
nu_max	ins-bc.c	18
nu_min	ins-bc.c	19
nv	fv_vert.c	62
nvert	layers.c	64
output_bottom_dofs	temp-solver.c	/^output_bottom_dofs(NSSolver *ns, int tstep)$/
part_layered_mesh	layers.c	/^part_layered_mesh(GRID *g, LAYERED_MESH *gL)$/
pc_proc	ins-pcd.c	/^pc_proc(SOLVER *pc_solver, VEC *b0, VEC **x0)$/
phgDofSetName	ins-solver.c	/^void phgDofSetName(DOF *dof, const char *name)$/
phgElemInfo	layers.c	103
phgElemInfoCount	layers.c	44
phgNSBuildPc	ins-pcd.c	/^phgNSBuildPc(NSSolver *ns)$/
phgNSBuildSolverGu	ice-grid.c	/^phgNSBuildSolverGu(NSSolver *ns)$/
phgNSBuildSolverTMat	temp-solver.c	/^phgNSBuildSolverTMat(NSSolver *ns, BOOLEAN init_T)/
phgNSBuildSolverTRHS	temp-solver.c	/^phgNSBuildSolverTRHS(NSSolver *ns, BOOLEAN init_T)/
phgNSBuildSolverUMat	ins-system.c	/^phgNSBuildSolverUMat(NSSolver *ns)$/
phgNSBuildSolverURHS	ins-system.c	/^phgNSBuildSolverURHS(NSSolver *ns, GEO_INFO *geo)$/
phgNSCreate	ins-solver.c	/^phgNSCreate(GRID *g, NSParams *ns_params0)$/
phgNSDestroyPc	ins-pcd.c	/^void phgNSDestroyPc(NSSolver *ns)$/
phgNSDestroySolverGu	ice-grid.c	/^static void phgNSDestroySolverGu(NSSolver *ns)$/
phgNSDestroySolverT	temp-solver.c	/^void phgNSDestroySolverT(NSSolver *ns)$/
phgNSDestroySolverU	ins-solver.c	/^void phgNSDestroySolverU(NSSolver *ns)$/
phgNSFinalize	ins-solver.c	/^void phgNSFinalize(NSSolver **ns_ptr)$/
phgNSInitPc	ins-pcd.c	/^void phgNSInitPc(NSSolver *ns)$/
phgNSInitSolverGu	ice-grid.c	/^static void phgNSInitSolverGu(NSSolver *ns)$/
phgNSInitSolverT	temp-solver.c	/^void phgNSInitSolverT(NSSolver *ns)$/
phgNSInitSolverU	ins-solver.c	/^void phgNSInitSolverU(NSSolver *ns)$/
phgNSPinNode	ins-solver.c	/^phgNSPinNode(NSSolver *ns)$/
phgNSReInitSolverU	ins-solver.c	/^void phgNSReInitSolverU(NSSolver *ns)$/
phgNSSolverTBuildConstrain	temp-solver.c	/^phgNSSolverTBuildConstrain(NSSolver *ns)$/
phgNSSolverTSolve	temp-solver.c	/^phgNSSolverTSolve(NSSolver *ns, BOOLEAN init_T)$/
phgNSTempInit	temp-solver.c	/^phgNSTempInit(NSSolver *ns)$/
phgNSTimeAdvance	ins-solver.c	/^void phgNSTimeAdvance(NSSolver *ns, FLOAT time, in/
phgParametersCreate	ins-solver.c	/^phgParametersCreate()$/
phgResumeLogUpdate	save-load.c	/^phgResumeLogUpdate(GRID *g, FLOAT *time, int *tste/
phgResumeStage	save-load.c	/^phgResumeStage(GRID *g, FLOAT *time, int *tstep, c/
presprcp	netcdf-utils.c	24
proj_gradu	temp-solver.c	/^proj_gradu(NSSolver *ns, DOF *gradu)$/
quad_pt	fv_vert.c	56
read_nc_data	netcdf-utils.c	/^read_nc_data(char *file_name)$/
read_txt_data	read_txt_data.c	/^double** read_txt_data(char *file_name)$/
restore_time	ins-bc.c	/^void restore_time()$/
rho	exact-solutions.c	14
rotate_dof_bases	slip-bdry.c	/^rotate_dof_bases(DOF *u, SURF_BAS *surf_bas, BOOLE/
runoff	netcdf-utils.c	30
save_dof_data	save-load.c	/^save_dof_data(GRID *g, DOF *dof, const char *file)/
save_dof_data3	save-load.c	/^save_dof_data3(GRID *g, DOF *dof, const char *file/
save_element_id	save-load.c	/^save_element_id(GRID *g)$/
save_map	save-load.c	/^save_map(GRID *g, const char *file) {$/
setFuncTime	ins-bc.c	/^void setFuncTime(FLOAT time_in)$/
set_boundary_mask	ESIMINT-TEST.c	/^set_boundary_mask(NSSolver *ns)    $/
set_boundary_mask	EXACT.c	/^set_boundary_mask(NSSolver *ns)    $/
set_boundary_mask	GREENLAND.c	/^set_boundary_mask(NSSolver *ns)    $/
set_boundary_mask	ISMIP-HOM.c	/^set_boundary_mask(NSSolver *ns)    $/
set_boundary_mask	LAS.c	/^set_boundary_mask(NSSolver *ns)    $/
smb	netcdf-utils.c	31
solver_Gu	ice-grid.c	182
spyr	exact-solutions.c	16
struct_mesh_init	struct-mesh.c	/^struct_mesh_init(GRID *g)$/
struct_mesh_reinit	struct-mesh.c	/^struct_mesh_reinit(GRID *g)$/
struct_mesh_update	struct-mesh.c	/^struct_mesh_update(NSSolver *ns, int tstep, double/
surftemp	netcdf-utils.c	33
surfvelmag	netcdf-utils.c	20
surfvelx	netcdf-utils.c	27
surfvely	netcdf-utils.c	26
sym_check	ins-utils.c	/^void sym_check(NSSolver *ns)$/
t	EXACT.c	215
temp	netcdf-utils.c	34
thk	netcdf-utils.c	29
topg	netcdf-utils.c	28
trans_eye	slip-bdry.c	4
trans_left	slip-bdry.c	/^trans_left(FLOAT *A, int ncol, int lda, const FLOA/
trans_leftT	slip-bdry.c	/^trans_leftT(FLOAT *A, int ncol, int lda, const FLO/
trans_rightT	slip-bdry.c	/^trans_rightT(FLOAT *A, int nrow, int lda, const FL/
tri	fv_vert.c	64
usrf	netcdf-utils.c	18
v	fv_vert.c	49
vtk_file	ins-main.c	22
vtk_tmp_str	layers.c	30
vtk_verb	layers.c	29
x1	netcdf-utils.c	16
x1	netcdf-utils.c	40
x_dat	struct-mesh.c	18
xc	fv_vert.c	52
xllcorner	read_txt_data.c	6
y1	netcdf-utils.c	17
y1	netcdf-utils.c	40
yc	fv_vert.c	52
